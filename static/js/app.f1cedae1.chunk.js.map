{"version":3,"sources":["node_modules/react-native-bootstrap-styles/src sync","actions/index.js","components/FilterBar.js","components/FoodCard.js","database.js","components/FoodList.js","reducers/index.js","store.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","actionTypes","toggleFilter","filterName","type","payload","bootstrapStyleSheet","BootstrapStyleSheet","s","styles","c","StyleSheet","create","switchLabel","fontSize","paddingTop","color","FilterBar","dispatch","useDispatch","filters","useSelector","state","View","style","row","bgSecondary","Text","col3","Switch","value","Vegan","onValueChange","FoodCard","foodItem","useWindowDimensions","width","height","tags","split","map","tag","idx","listGroupItemPrimary","my1","listGroupItemText","p2","card","m3","Image","cardImgTop","overflowHidden","source","uri","cardBody","cardTitle","h5","name","bgWarning","cuisine","cardTextLastChild","description","listGroup","my2","tagsCombos","FoodList","console","log","DATA","foodItems","i","push","random","int","min","max","length","getFoodItems","filter","includes","flex1","FlatList","data","renderItem","item","keyExtractor","initialState","store","createStore","action","container","flex","backgroundColor","alignItems","justifyContent","separator","marginVertical","borderBottomColor","borderBottomWidth","registerRootComponent","flexColumn","alignItemsStretch","bgLight","h1","textCenter","mt5","mb2","StatusBar"],"mappings":"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","file":"static/js/app.f1cedae1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 101;","export const actionTypes = {\n    'FILTER_TOGGLED': 'foodItems/filterToggled'\n}\n\nexport const toggleFilter = (filterName) => {\n    return (\n        {\n            type: actionTypes.FILTER_TOGGLED,\n            payload: filterName\n        }\n    )\n}","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Switch, View, StyleSheet, Text } from 'react-native';\n\nimport BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet();\nconst { s, c } = bootstrapStyleSheet;\n\nimport { toggleFilter } from '../actions';\n\nconst FilterBar = () => {\n\n    /* const [filter, setFilter] = useState({\n        fatFree: true,\n        vegan: true\n    }); */\n    const dispatch = useDispatch();\n\n    const filters = useSelector(state => state.filters);\n\n    return (\n        <View style={[s.row, s.bgSecondary]}>\n            <Text style={[s.col3, styles.switchLabel]}>Vegan</Text>\n            <Switch value={filters.Vegan}  style={[s.col3]} onValueChange={() => dispatch(toggleFilter('Vegan'))}/>\n            <Text style={[s.col3, styles.switchLabel]}>Fat-Free</Text>\n            <Switch value={filters['Fat-Free']} onValueChange={() => dispatch(toggleFilter('Fat-Free'))}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    switchLabel: {\n        fontSize: 17,\n        paddingTop: 12,\n        color: '#fff'\n    }\n})\n\nexport default FilterBar;","import { View, StyleSheet, Text, Image, useWindowDimensions } from 'react-native';\n\nimport BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet();\nconst { s, c } = bootstrapStyleSheet;\n\nconst FoodCard = ({ foodItem }) => {\n\n    const { height, width } = useWindowDimensions();\n\n    const tags = foodItem.tags.split(' ').map((tag, idx) => {\n        return (\n            <View key={idx} style={[s.listGroupItemPrimary, s.my1]}>\n                <Text style={[s.listGroupItemText, s.p2]}>{tag}</Text>\n            </View>\n        );\n    })\n    return (\n        <View style={[s.card, s.m3]}>\n            <Image style={[s.cardImgTop, s.overflowHidden, {\n                width: width - 50,\n                height: 200\n            }]} source={{ uri: `https://via.placeholder.com/${width - 50}x200.png` }} />\n            <View style={s.cardBody}>\n                <Text style={[s.cardTitle, s.h5]}>{foodItem.name}</Text>\n                <Text style={[s.bgWarning, s.p2]}>{foodItem.cuisine}</Text>\n                <Text style={[s.cardTextLastChild, s.p2]}>{foodItem.description}</Text>\n                {foodItem.tags !== '' &&\n                    <View style={[s.listGroup, s.my2]}>\n                        {tags}\n                    </View>\n                }\n            </View>\n        </View>\n    );\n}\n\nexport default FoodCard;","import random from \"random\";\n\nconst tagsCombos = ['', 'Vegan', 'Fat-Free', 'Vegan Fat-Free']\n\nexport const getFoodItems = () => {\n    let foodItems = [];\n    for(let i = 1; i <= 30; i++) {\n        foodItems.push({\n            id: i,\n            name: `Food ${i}`,\n            description: `Food ${i} Description`,\n            cuisine: `Cuisine ${random.int((min = 1), (max=10))}`,\n            tags: tagsCombos[random.int((min = 0), (max = tagsCombos.length - 1))]\n        });\n    }\n\n    return foodItems;\n\n}","import { View, StyleSheet, Text, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\n\nimport BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet();\nconst { s, c } = bootstrapStyleSheet;\n\nimport FoodCard from './FoodCard';\n\nimport { getFoodItems } from '../database';\n\nconst FoodList = () => {\n\n    const filters = useSelector(state => state.filters);\n\n    console.log(filters);\n\n    const DATA = getFoodItems().filter(foodItem => {\n        for(let filter in filters) {\n            // console.log(filter, foodItem.tags);\n            if(filters[filter] !== foodItem.tags.includes(filter)) {\n                return false;\n            }\n        }\n        return true;\n    })\n    \n    const renderItem = ({ item }) => {\n        return (<FoodCard foodItem={item} />);\n    }\n\n    return (\n        <View style={s.flex1}>\n            <FlatList\n                data={DATA}\n                renderItem={renderItem}\n                keyExtractor={item => item.id}\n            />\n        </View>\n    );\n}\n\nexport default FoodList;","import { actionTypes } from \"../actions\"\n\nconst initialState = {\n    filters: {\n        Vegan: true,\n        'Fat-Free': true\n    }\n}\n\nexport const rootReducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.FILTER_TOGGLED:\n            return {\n                ...state,\n                filters:{\n                    ...state.filters,\n                    [action.payload]: !state.filters[action.payload]\n                }\n            }\n\n        default: return state\n    }\n}","import { createStore } from 'redux';\n\nimport { rootReducer } from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet();\nconst { s, c } = bootstrapStyleSheet;\n\nimport FilterBar from './components/FilterBar';\nimport FoodList from './components/FoodList';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n// console.log(s);\n\nconst Separator = () => {\n  return (<View style={styles.separator} />);\n}\n\nexport default function App() {\n  return (\n    <Provider store={store} >\n      <View style={[s.container, s.flexColumn, s.alignItemsStretch, s.bgLight, s.flex1]}>\n        <Text style={[s.h1, s.textCenter, s.mt5, s.mb2]}>Food Items</Text>\n        {/* <Separator /> */}\n        <FilterBar />\n        <FoodList />\n        <StatusBar style=\"auto\" />\n      </View>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#000',\n    borderBottomWidth: 2,\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}